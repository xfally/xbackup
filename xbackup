#!/bin/bash

######################################################################
# The script toolbox is created to backup and restore your
# Debian/Ubuntu OS (64bits).
#---------------------------------------------------------------------
# This is the **backup** script which invokes needed child scripts to
# complete the backup work.
#---------------------------------------------------------------------
# by pax (coolwinding@gmail.com) 150122
######################################################################

function notice() {
	cat <<EOF
**********************************************************************
Notice:
  1. Modify me at first, to make your OS happy!
  2. All backup files will be saved under "${DEST_DIR}".
**********************************************************************
EOF
}

function usage() {
	cat <<EOF
Usage: xbackup [OPTIONS]...
  OPTIONS:
  -d Destination dir       Destination dir for backup (default ${P}/backup).
                             All backup arhive files will be saved here.
  -f List file             Absolute list file path (default ${P}/config/backup_files.list).
  -s Silent mode           Suppress verboss output in console.

Example:
  xbackup -d /media/pax/usb_device/backup
    This will backup all files to the "backup" dir (created if not exist).
EOF
	exit
}

H=${USER}@${HOSTNAME}
T=$(date +"%Y%m%d%H%M%S")

W=`pwd`
echo ">>> work path: ${W}"
P=`dirname $(readlink -f $0)`
echo ">>> project path: ${P}"

cd $P

# export, so child scripts can get the flag.
export SILENT_MODE=0

while getopts ":d:f:s" OPTION
do
	case $OPTION in
		d ) DEST_DIR="$OPTARG";;
		f ) LIST_FILE="$OPTARG";;
		s ) export SILENT_MODE=1;;
		* ) usage;;
	esac
done

if [ -z "$DEST_DIR" ]; then
	DEST_DIR="${P}/backup"
	#DEST_DIR="${HOME}/backup"  # Use `${HOME}` instead of `~`!
fi

if [ -z "$LIST_FILE" ]; then
	LIST_FILE="${P}/config/backup_files.list"
fi

LOG_DIR="${P}/log"

mkdir -p ${DEST_DIR}
mkdir -p ${LOG_DIR}

echo ">>> backup dir: ${DEST_DIR}"
echo ">>> list file: ${LIST_FILE}"

. ./toolbox/utils

function main() {
	notice
	echo ">>>>>> Begin, please read and configure this script at first, or the OS may be broken!"

	echo "### step 1. backup installed packages..."
	give_me_a_chance || exit
	./toolbox/backup_packages ${DEST_DIR}/${H}_packages_${T}
	echo "### step 1. over..."

	echo "### step 2. backup dconf (only items different to original are saved)..."
	give_me_a_chance || exit
	./toolbox/backup_dconf ${DEST_DIR}/${H}_dconf_${T}
	echo "### step 2. over..."

	echo "### step 3. backup files..."
	give_me_a_chance || exit
	./toolbox/backup_files ${DEST_DIR}/${H}_files_${T} ${LIST_FILE}
	echo "### step 3. over..."

	echo ">>>>>> All done!"
}

main 2>&1 | tee ${LOG_DIR}/backup_${H}_${T}.log

echo ">>> log path: ${LOG_DIR}"

#!/bin/bash

######################################################################
# Synchronize files from one place to another.
#---------------------------------------------------------------------
# by pax (coolwinding@gmail.com) 170207
######################################################################

function usage() {
	cat <<EOF
Usage: xrsync [OPTIONS] SRC [DEST]
  OPTIONS:
  -m MODE                         1: delete-on test mode (default)
                                  2: delete-on real mode
                                  3: non-delete-on test mode
                                  4: non-delete-on real mode
  -F FILES_FROM                   The list of source-file names from FILE.
                                    Put your rsync list file here.
  -s                              Silent mode.
                                    Suppress verboss output in console.

Example:
  1. xrsync -m 2 /etc /media/pax/usb_device/backup
     This will synchronize "/etc" and all files under it to one usb device's "backup" dir (created if not exist).
  2. xrsync -m 2 /etc/ /media/pax/usb_device/backup
     This will synchronize all files under "/etc" to one usb device's "backup" dir (created if not exist).
  3. xrsync -m 2 -F ./data/rsync_files.list / /media/pax/usb_device/backup
     This will synchronize all files defined in rsync_files.list (path starts from "/" dir) to one usb device's "backup" dir (created if not exist).
EOF
	exit
}

H=${USER}@${HOSTNAME}
T=$(date +"%Y%m%d%H%M%S")

W=`pwd`
echo ">>> work path: ${W}"
P=`dirname $(readlink -f $0)`
echo ">>> project path: ${P}"

cd $P

# export, so child scripts can get the flag.
export SILENT_MODE=0

while getopts ":m:F:s" OPTION
do
	case $OPTION in
		m ) mode=$OPTARG;;
		F ) listfile="$OPTARG";;
		s ) export SILENT_MODE=1;;
		* ) usage;;
	esac
done

if [ -z "$mode" ]; then
	mode=1
fi

if [ ! -z "$listfile" ]; then
	filesfrom="--files-from $listfile"
fi

if [[ $SILENT_MODE -eq 1 ]]; then
	V=;
else
	V=-v
fi

shift $((OPTIND-1))

srcdir=$1
dstdir=$2

if [ -z "$srcdir" ]; then
	echo ">>> Need SRC dir!"
	usage
fi

LOG_DIR="${P}/log"

mkdir -p ${LOG_DIR}

function main() {
	if [ "$mode" -eq 1 ]; then
		xrsync="rsync -rtusL -n --progress --delete"
	elif [ "$mode" -eq 2 ]; then
		xrsync="rsync -rtusL --progress --delete"
	elif [ "$mode" -eq 3 ]; then
		xrsync="rsync -rtusL -n --progress"
	elif [ "$mode" -eq 4 ]; then
		xrsync="rsync -rtusL --progress"
	else
		usage
	fi

	echo ">>>>>> Begin..."

	echo "### rsync all wanted files in $listfile (under $srcdir) to $dstdir."
	$xrsync $V $filesfrom $srcdir $dstdir
	cp -f $listfile $dstdir

	echo ">>>>>> All done!"
}

main 2>&1 | tee ${LOG_DIR}/rsync_${H}_${T}.log

echo ">>> log path: ${LOG_DIR}"
